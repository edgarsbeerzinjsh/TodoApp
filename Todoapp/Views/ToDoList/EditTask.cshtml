@using static Todoapp.Database.ToDoList
@model Todoapp.Database.ToDoList
@{
        ViewData["Title"] = "Edit Task";
}

<h1>Edit Task</h1>

<hr />
@if (ViewBag.Message != null)
{
    <div class="form-group">
        <div class="col-md-10">@ViewBag.Message</div>
    </div>
}
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label">Title</label>
                <input asp-for="Title" class="form-control" value="@Model.Title"  />
            </div>
            <div class="form-group">
                <label asp-for="TaskText" class="control-label">Task Text</label>
                <input asp-for="TaskText" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="TaskList" class="control-label">Task List</label>
                <input asp-for="TaskList" class="form-control" />
            </div>
            <div class="md-3">
                <label asp-for="TaskLevel" class="">Task Level</label>
           </div>
                @foreach (TaskLevelEnum level in Enum.GetValues(typeof(TaskLevelEnum)))
                {
                    <div class="md-3">
                    <label>
                    <input type="radio" asp-for="TaskLevel" value="@Convert.ToInt32(level)"/>
                    @level
                    </label>
                    </div>
                }
            <div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back ToDo List</a>
</div>
